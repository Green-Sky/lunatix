load("@rules_cc//cc:defs.bzl", "cc_test")
load("//tools:no_undefined.bzl", "cc_library")

package(features = ["layering_check"])

exports_files(
    srcs = ["toxav.h"],
    visibility = ["//c-toxcore:__pkg__"],
)

# Private library with the public API header in it because in toxav, lots of
# things depend on the public API header.
cc_library(
    name = "public_api",
    hdrs = ["toxav.h"],
)

cc_library(
    name = "ring_buffer",
    srcs = ["ring_buffer.c"],
    hdrs = ["ring_buffer.h"],
    deps = ["//c-toxcore/toxcore:ccompat"],
)

cc_test(
    name = "ring_buffer_test",
    size = "small",
    srcs = ["ring_buffer_test.cc"],
    deps = [
        ":ring_buffer",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "rtp_test",
    size = "small",
    srcs = ["rtp_test.cc"],
    deps = [
        ":toxav",
        "//c-toxcore/toxcore:crypto_core",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "toxav",
    srcs = [
        "audio.c",
        "bwcontroller.c",
        "dummy_ntp.c",
        "groupav.c",
        "msi.c",
        "rtp.c",
        "toxav.c",
        "toxav_old.c",
        "ts_buffer.c",
        "codecs/h264/codec.c",
        "codecs/vpx/codec.c",
        "video.c",
    ],
    hdrs = [
        "audio.h",
        "bwcontroller.h",
        "dummy_ntp.h",
        "groupav.h",
        "msi.h",
        "rtp.h",
        "toxav.h",
        "toxav.api.h",
        "ts_buffer.h",
        "tox_generic.h",
        "toxav_hacks.h",
        "codecs/toxav_codecs.h",
        "video.h",
    ],
    visibility = ["//c-toxcore:__subpackages__"],
    deps = [
        ":ring_buffer",
        "//c-toxcore/toxcore:ccompat",
        "//c-toxcore/toxcore:logger",
        "//c-toxcore/toxcore:mono_time",
        "//c-toxcore/toxcore:net_crypto",
        "//c-toxcore/toxcore:network",
        "//c-toxcore/toxcore:util",
        "//c-toxcore/toxcore:tox",
        "@libvpx",
        "@opus",
    ],
)

sh_library(
    name = "cimple_files",
    srcs = glob([
        "*.c",
        "*.h",
    ]),
    visibility = ["//c-toxcore/testing:__pkg__"],
)
